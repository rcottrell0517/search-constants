<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="assets/style.css" />
    <!-- <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.min.css"
    /> -->
    <title>Document</title>
  </head>
  <body>
    <div class="output"></div>
    <section class="bg"></section>
    <a href="/users/login">Login</a>
    <div class="loading-text">0%</div>

    <script>
      const loadText = document.querySelector(".loading-text");
      const bg = document.querySelector(".bg");
      const changeSite = document.querySelector("h1");
      const output = document.querySelector(".output");

      document.addEventListener("DOMContentLoaded", function () {
        const date = new Date();
        let cur = date.getHours();
        let message;
        console.log(cur);

        if (cur > 17) {
          message = "Good Evening";
        } else if (cur > 12 || cur == 12) {
          message = "Good Afternoon";
        } else if (cur > 0) {
          message = "Good Morning";
        } else {
          message = "Something is wrong";
        }

        output.innerHTML = "<h1>" + message + "</h1>";
      });

      // output.addEventListener("click", function () {
      //   window.location = "login_register.html";
      // });

      // changeSite.addEventListener("click", function () {
      //   window.location = "users/login.ejs";
      // });

      let load = 0;

      let int = setInterval(blurring, 30);

      function blurring() {
        load++;

        if (load > 99) {
          clearInterval(int);
        }

        // console.log(load)

        loadText.innerText = `${load}%`;
        loadText.style.opacity = scale(load, 0, 100, 1, 0);
        bg.style.filter = `blur(${scale(load, 0, 100, 30, 0)}px)`;
      }

      // https://stackoverflow.com/questions/10756313/
      // javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers
      const scale = (number, inMin, inMax, outMin, outMax) => {
        return (
          ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin
        );
      };
    </script>
  </body>
</html>
